# -*- coding: utf-8 -*-
"""Stellar Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14z-gSPSv9wYjTqAVqmOjjnxW-EDnytmy
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""**1. Reading Data from file**"""

m67_data = pd.read_csv('M67-CG.csv')
df = pd.DataFrame (m67_data)

"""**2. Calculating distance (in parsecs)**"""

df ['dist'] = 1000 / df['plx'] # Distance in parsecs

"""**3. Calculating Mag and L**"""

df['M_abs'] = df['Gmag'] - 5*np.log10(df['dist'] / 10)
df['L'] = np.power (10, -(0.4*(df['M_abs'] - 4.68)))

"""**4. Main Sequence labling**"""

df['MS'] = 'null'
for s in df.index:
  if 2.5 <= df['L'][s] <= 7.5 :
    df['MS'][s] = 1

"""**5. Calculating Mass of the stars**"""

df['M_pp']='null'
df['M_CNO']='null'
for s in df.index:
  if df['MS'][s] == 1:
    # print (df['M_pp'][s])
    # for p-p chain, n=4:
    df['M_pp'][s] = np.power(df['L'][s], 0.18315)
    # for CNO,       n=16:
    df['M_CNO'][s] = np.power(df['L'][s], 0.19372)

"""**6. Plotting P, ρ, and T for p-p chain and CNO**"""

for s in df.index:
  if df['MS'][s] == 1:
    df['P_pp'][s] = np.power (df['M_pp'][s], 1.692)
  else:
    df['P_pp'][s] = 0

df.plot(x ='M_pp', y='P_pp', kind='scatter')
plt.xlabel('M_pp')
plt.ylabel('P_pp')
plt.show()

for s in df.index:
  if df['MS'][s] == 1:
    df['ρ_pp'][s] = np.power (df['M_pp'][s], 0.769)
  else:
    df['ρ_pp'][s]=0

df.plot(x ='M_pp', y='ρ_pp', kind='scatter')
plt.xlabel('M_pp')
plt.ylabel('ρ_pp')
plt.show()

for s in df.index:
  if df['MS'][s] == 1:
    df['T_pp'][s] = np.power (df['M_pp'][s], 0.923)
  else:
    df['T_pp'][s]=0

df.plot(x ='M_pp', y='T_pp', kind='scatter')
plt.xlabel('M_pp')
plt.ylabel('T_pp')
plt.show()

"""**7. H-R Diagram for MS stars**"""

L_MS = []
T_MS = []

for s in df.index:
  if df['MS'][s] == 1:
    L_MS.append (df['L'][s])
    T_MS.append (df['T'])

df.plot(x ='', y='L', kind='scatter')
plt.xlabel('log T/Tsun')
plt.ylabel('log L/Lsun')
plt.show()

fig, ax = plt.subplots(figsize=(8,10))

ax.set_xlim(-0.5, 2.5)
ax.set_ylim(15, -10)
ax.grid()
ax.set_title('H-R Diagram \n (Hipparcos catalog)')

ax.title.set_fontsize(20)
ax.set_xlabel('Color index B-V')
ax.xaxis.label.set_fontsize(20)
ax.set_ylabel('Absolute magnitude')
ax.yaxis.label.set_fontsize(20)

ax.scatter(df['T'], df_clean['M_V'],
#           s=50, edgecolors='none', alpha=0.015, c='k')
           s=1, edgecolors='none', c='k')

ax.tick_params(axis='both', labelsize=14)